name: Build Chip

on:
  push:
  workflow_dispatch:

# jobs:
#   build:
#     name: Build
#     runs-on: ubuntu-22.04
#     steps:
#       - name: Check out repository
#         uses: actions/checkout@v3
#       - name: Build chip
#         uses: wokwi/wokwi-chip-clang-action@main
#         with:
#           sources: "src/main.c"
#       - name: Copy chip.json
#         run: sudo cp chip.json dist
#       - name: 'Upload Artifacts'
#         uses: actions/upload-artifact@v4
#         with:
#           name: chip
#           path: |
#             dist/chip.json
#             dist/chip.wasm
jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install WASI SDK
        run: |
          wget -q https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-20/wasi-sdk-20.0-linux.tar.gz
          tar -xzf wasi-sdk-20.0-linux.tar.gz
          # O layout do SDK oficial: wasi-sdk-20.0/bin, lib, include etc.
          echo "WASI_SDK_PATH=$(pwd)/wasi-sdk-20.0" >> $GITHUB_ENV

      - name: Build chip with WASI support
        run: |
          mkdir -p dist
          $WASI_SDK_PATH/bin/clang --sysroot=$WASI_SDK_PATH/share/wasi-sysroot \
            --target=wasm32-wasi -O3 -flto -nostartfiles \
            -Wl,--no-entry -Wl,--export-all -Wl,--allow-undefined \
            -o dist/chip.wasm src/main.c

      - name: Copy chip.json
        run: sudo cp chip.json dist
      - name: 'Upload Artifacts'
        uses: actions/upload-artifact@v4
        with:
          name: chip
          path: |
            dist/chip.json
            dist/chip.wasm
  # The release job only runs when you push a tag starting with "v", e.g. v1.0.0 
  release:
    name: Release
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download compiled chip
        uses: actions/download-artifact@v4
        with:
          name: chip
          path: chip
      - name: Create a zip archive
        run: cd chip && zip -9 ../chip.zip chip.*
        env:
          ZIP_VERSION: ${{ github.ref_name }}
      - name: Upload release
        uses: ncipollo/release-action@v1
        with:
          artifacts: chip.zip
          token: ${{ secrets.GITHUB_TOKEN }}
          generateReleaseNotes: true
